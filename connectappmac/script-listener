#!/bin/bash
clear
echo "******************************************" 
echo " " 
echo "         Welcome to NowYouHear.me     "
echo " " 
echo "******************************************" 
echo " "
osver=$(defaults read loginwindow SystemVersionStampAsString | sed 's/10.//g' )
intosver=$(printf %.0f $(echo "$osver" | bc -l))
if [[ $intosver -lt 11 ]]; then 
osascript -e 'display dialog "You need Mac OS 10.11 El Capitan or Higher for this application to work, please upgrade your Mac OS." buttons {"Exit"}'
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if ! ping -q -c 2 -W 1 8.8.8.8 >/dev/null; then osascript -e 'display dialog "You are not connected to the Internet, or at least NowYouHearMe Connect could not ping Google. \n\nCheck your connection or reboot your computer." buttons {"OK"}' & osascript -e 'tell application "NowYouHearMeConnect" to quit' & osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -f ~/Downloads/.usr/local/bin/jq-osx-amd64 ]; then cp -pr ~/Downloads/.usr/local/bin/jq-osx-amd64 '/Library/Application Support/nowyouhearme/jq-osx-amd64'; fi
if [ -f /Applications/.nowyouhearme/jq-osx-amd64 ]; then
osascript <<EOT
display dialog "NowYouHearMe Connect needs to fix itself and move supporting files from ( /Applications/.nowyouhearme ) to 
/Library/Application Support/nowyouhearme" & "
" & "
This way files are stored in a more correct location." & "
Your password will be required for this move." buttons {"OK"}
do shell script "sudo mv /Applications/.nowyouhearme/ '/Library/Application Support/'" with administrator privileges
do shell script "sudo mv '/Library/Application Support/.nowyouhearme/' '/Library/Application Support/nowyouhearme/'" with administrator privileges
EOT
fi
chmod +x '/Library/Application Support/nowyouhearme/jq-osx-amd64'
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
display dialog "NowYouHearMe Connect was not PROPERLY exited the last time it ran." & "\n" & "\nBecause of this, your computer may still be connected to the NowYouHear.me network from the last session." & "\n" & "\nClick OK to clear out these settings." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
do shell script "sudo launchctl load '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 1
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
display dialog "Your previous session settings have been cleared" & "\n" & "\nClick OK to start a new NowYouHear.me session." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
delay 1
EOT
fi
osascript <<EOT
display dialog "Call your friend on the phone and confirm that they are available to Host a session.\n\nYes Macs can talk to PCs and vice-versa." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Yes, We’re Ready"}
EOT
echo " "
echo "Enter the nowyouhear.me account email or username,"
echo "then pin in the dialog prompts."
echo " "
echo "This will also require your computer password."
echo " "
sleep 2
emailoruser=$(/usr/bin/osascript <<EOT
set email to the text returned of (display dialog "As a Listener you are considered a guest.\nYou don't need your own account." & "\n" & "\nHowever, the account holder (Host) could potentially swap roles to be a Listener." & "\n" & "\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT.\n\nEnter an email or username:" default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
if [ -z "$emailoruser" ]; then
sleep 2
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
echo " "
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then
if [ -n "$emailoruser" ]; then
userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser")
user=$(echo $userstring | sed 's/[:].*$//')
fi
fi
echo " "
echo "Looking up account info..."
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
emailoruser=$(/usr/bin/osascript <<EOT
set emailoruser to the text returned of (display dialog "The email or username entered was not found. Try again." & "\n" & "\nWhat is the NowYouHear.me account holder’s email or username?\n\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser"); fi
fi
fi
if [ -z "$emailoruser" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
emailoruser=$(/usr/bin/osascript <<EOT
set emailoruser to the text returned of (display dialog "The email or username entered was not found. Try again." & "\n" & "\nWhat is the NowYouHear.me account holder’s email or username?\n\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then 
userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser")
user=$(echo $userstring | sed 's/[:].*$//')
fi
fi
fi
if [ -z "$emailoruser" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
osascript <<EOT
osascript <<EOT
display dialog "Account still not found. Have the account holder go to www.NowYouHear.me and confirm their subscription is still valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
sleep 2
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
fi
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "What is the 4 digit passcode of the NowYouHear.me account holder?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
if [ -z "$userstring" ]; then
passcodeconfig=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.description' | sed -e 's/^"//' -e 's/"$//')
fi
if [ -n "$userstring" ]; then 
passcodeconfig=$(echo $userstring | sed "s/$emailoruser://g" | sed 's/[:].*$//')
fi
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is the NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is the NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is the NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is the NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
osascript <<EOT
display dialog "Passcode still not found. Have the account holder go to www.NowYouHear.me and confirm their subscription is valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
fi
passcheck1="2"
passcheck2="3"
if [ ! -z $passcodeconfig ]; then passcheck1="1"; fi
if [ $passcode == $passcodeconfig ]; then passcheck2="1"; fi
if [ $passcheck1 == $passcheck2 ]; then
if [ -n "$userstring" ]; then
ztid=$(echo $userstring | sed "s/$emailoruser://g" | sed 's/.*://')
fi
echo " "
echo "Connecting to the account holder’s NowYouHear.me network..."
nyhmnetwork=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid)
devicelimit1more=$(echo $nyhmnetwork | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.config.ipAssignmentPools' | tr -d '[ { "ipRangeStart": "172.22.172.1", "ipRangeEnd": "172.22.172.',},])
devicelimit=$(($devicelimit1more - 1))
count=$(echo $nyhmnetwork | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.totalMemberCount')
count1=$count
if (($count == 0 )); then count1=1; fi
filedate=$(date "+%m-%d-%y")
osascript <<EOT
tell application "OBS" to quit
do shell script "echo $ztid >'/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
do shell script "sudo launchctl load '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/connectfirstrun.txt' 2>&1 >/dev/null" with administrator privileges
do shell script "if [ -f ~/Downloads/.usr/local/bin/jq-osx-amd64 ]; then sudo rm -rf ~/Downloads/.usr/; fi" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio/global.ini' ]; then sudo cp -pr ~/'Library/Application Support/obs-studio' ~/'Library/Application Support/obs-studio-archive-$filedate'; fi" with administrator privileges
do shell script "sudo /usr/local/bin/zerotier-cli join $ztid" with administrator privileges
do shell script "sudo cp -pr /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/obs-studio ~/'Library/Application Support/'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -r /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global-mainoutput-false.ini  ~/'Library/Application Support/obs-studio/'" with administrator privileges
do shell script "sudo mv ~/'Library/Application Support/obs-studio/global-mainoutput-false.ini' ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
tell application "Terminal" to activate
EOT
clear
echo "******************************************" 
echo " " 
echo "         Welcome to NowYouHear.me     "
echo " " 
echo "******************************************" 
echo " "
sleep 2
echo "Looking for NowYouHear.me network address..."
sleep 1
echo " "
echo " "
sleep 2
echo "This may take up to a minute to detect..."
sleep 2
echo " "
sleep 3
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
if [ -z "$onnetwork" ]; then
sleep 2
echo " "
sleep 3
echo " "
echo "Looking for NowYouHear.me network address...2nd Try."
sleep 2
echo "Please be patient..."
sleep 3
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if [ -z "$onnetwork" ]; then
echo " "
sleep 3
echo "Looking for NowYouHear.me network address...3rd Try."
sleep 2
echo " "
sleep 2
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if ([ $count1 -gt $devicelimit ] && [ -z "$onnetwork" ]); then
osascript <<EOT
display dialog "Well there's good news and bad news..." & "
" & "
The good news is that you or the account holder has been using NowYouHear.me on several devices, which is really rad. So good job!" & "
" & "
The bad news is that you have exceeded the $devicelimit device limit on this account. 
\nTo fix this, you must contact NowYouHear.me support to clear unused devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit and Go to Website"}
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
open location "https://nowyouhear.me"
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
EOT
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -z "$onnetwork" ]; then
osascript <<EOT
set detect to display dialog "Well crap, this computer could not find a NowYouHear.me network address." & "\n" & "\nTo fix, click Reopen to close and re-sign in to NowYouHearMeConnect." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit This Program" , "Reopen"}
if button returned of detect is "Exit This Program" then
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
end if
if button returned of detect is "Reopen" then
delay 0.5
end if
EOT
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
delay 1
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-listener"
end tell
delay 0.5
EOT
fi
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
sleep 1
if [ ! -z "$onnetwork" ]; then
osascript <<EOT
display dialog "You are now connected to the $emailoruser's NowYouHear.me network." & "\n" & "\nThis NowYouHear.me account can have up to $devicelimit devices." & "\n" & "\nHave the Host contact NowYouHear.me support if you need to remove unused devices." & "\n" & "\nThis account has previously used $count1 out of $devicelimit available devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"I Understand, Let's Continue"}
delay 1
log " "
log "Woohoo! Network address found!"
log " "
log "******************************************************************************"
log " " 
log "You are connected to $emailoruser's NowYouHear.me network!"
log " " 
log "Keep this window open." 
log " " 
log "******************************************************************************"
log " "
log " "
log " "
log " "
log " "
log " "
log " "
log " "
log " "
display dialog "You must now wait until the Host is ready to Broadcast sound..." & "\n" & "\nYou will know the HOST is ready when THEY see a dialog box that says..." & "\n" & "\n(You are now Broadcasting sound, with a stop sign icon.)" with icon stop buttons {"Yes, we are both ready"}
delay 1
EOT
mkdir -p /Applications/.nowyouhearme/
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch.txt ) & sleep 1 ; kill $!
ndisearch=$(</Applications/.nowyouhearme/ndisearch.txt)
name=$(echo $ndisearch | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch.txt
rm -rf /Applications/.nowyouhearme/
name2=yes
name3=yes
fi
if [ -z "$name" ]; then
osascript <<EOT
display dialog "No NowYouHear.me peers Broadcasting OBS were discovered." & "
" & "
Ask Host over the phone if THEY are running OBS with something that says You Are the Host?" with icon file ("/Applications/OBS.app/Contents/Resources/OBS.icns" as POSIX file) buttons {"Retry, Discovery?"}
EOT
mkdir -p /Applications/.nowyouhearme/
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch2.txt ) & sleep 1 ; kill $!
ndisearch2=$(</Applications/.nowyouhearme/ndisearch2.txt )
name2=$(echo $ndisearch2 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch2.txt
rm -rf /Applications/.nowyouhearme/
name=$name2
fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then osascript -e 'display dialog "Well, crap!! It happened again…
Listener could not autodetect the Host,
even the 2nd time around…
1. Confirm that you and the Host are using the same email to sign in.
2. Confirm the HOST has OBS open and it says (THEY) You Are the Host?
3. If you’ve confirmed 1 and 2, then the Host may not actually be on the NowYouHear.me network 
(even though it says they are)
The Host will need to sign out and sign back in." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Wait for Host"}'; fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then osascript -e 'display dialog "Waiting for Host to reconnect...
CLICK CONNECT AGAIN ONLY AFTER THE HOST HAS SIGNED BACK IN AND IS READY TO BROADCAST." with icon stop buttons {"Connect Again"}'; fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then
mkdir -p /Applications/.nowyouhearme/
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch3.txt ) & sleep 1 ; kill $!
ndisearch3=$(</Applications/.nowyouhearme/ndisearch3.txt)
name3=$(echo $ndisearch3 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch3.txt
rm -rf /Applications/.nowyouhearme/
name=$name3
fi
if [ -z "$name3" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
osascript <<EOT
display dialog "No NowYouHear.me peers Broadcasting OBS were discovered." & "\n" & "\nConfirm that the Host is running OBS?" with icon file ("/Applications/OBS.app/Contents/Resources/OBS.icns" as POSIX file) buttons {"Retry, Discovery?"}
EOT
mkdir -p /Applications/.nowyouhearme/
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch4.txt ) & sleep 1 ; kill $!
ndisearch4=$(</Applications/.nowyouhearme/ndisearch4.txt)
name4=$(echo $ndisearch4 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch4.txt
rm -rf /Applications/.nowyouhearme/
name=$name4
fi
if [ -z "$name4" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then osascript -e 'display dialog "Hmmm, today is just not your day.
Listener and Host Computers could not autodetect each other.
Try you and the Host rebooting both your computers?" buttons {"Well, crap...Exit"}'; fi
if [ -z "$name3" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
do shell script "sudo rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt" with administrator privileges
EOT
fi
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [ -z "$name2" ] && [ ! -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
osascript <<EOT
display dialog "Well crap. This can happen sometimes...
Still no NowYouHear.me peers Broadcasting were discovered." & "
" & "
There are 3 potential problems.
1. Confirm the Host has OBS open and it says 
(THEY) You Are the Host?
2. If it is the 1st time (You) the Listener signed into an account, it takes longer the 1st time.
3. YOU AND THE HOST MUST USE THE SAME ACCOUNT TO SIGN IN FOR THIS TO WORK." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Sign Out and Sign Back In"}
EOT
if [ -z "$name2" ]; then
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "echo 'Listener could not autodetect.' >/Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt" with administrator privileges
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
delay 1
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-listener"
end tell
delay 0.5
EOT
fi
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
fi
sleep 2
osascript <<EOT
tell application "Terminal" to activate
EOT
mkdir -p /Applications/.nowyouhearme/
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo "******************************************************************************"
echo " " 
echo "You are connected to $emailoruser's NowYouHear.me network!"
echo " " 
echo "Keep this window open." 
echo " " 
echo "******************************************************************************"
echo " "
echo " "
echo "NowYouHearMe Connect detected Host computer name:"
echo " "
echo "$name"
echo " "
echo " "
sleep 1
echo "Your computer password is required to set OBS to receive audio."
echo " "
sleep 1
echo "After entering your password, OBS will open and receive audio."
echo " "
echo " " 
echo " " 
echo "You are the Listener in this session."
echo " "
echo '{
    "current_program_scene": "Scene",
    "current_scene": "Scene",
    "current_transition": "Fade",
    "groups": [],
    "modules": {
        "auto-scene-switcher": {
            "active": false,
            "interval": 300,
            "non_matching_scene": "",
            "switch_if_not_matching": false,
            "switches": []
        },
        "output-timer": {
            "autoStartRecordTimer": false,
            "autoStartStreamTimer": false,
            "recordTimerHours": 0,
            "recordTimerMinutes": 0,
            "recordTimerSeconds": 30,
            "streamTimerHours": 0,
            "streamTimerMinutes": 0,
            "streamTimerSeconds": 30
        },
        "scripts-tool": []
    },
    "name": "Untitled",
    "preview_locked": false,
    "quick_transitions": [
        {
            "duration": 300,
            "hotkeys": [],
            "id": 1,
            "name": "Cut"
        },
        {
            "duration": 300,
            "hotkeys": [],
            "id": 2,
            "name": "Fade"
        }
    ],
    "saved_projectors": [],
    "scaling_enabled": false,
    "scaling_level": 0,
    "scaling_off_x": 0.0,
    "scaling_off_y": 0.0,
    "scene_order": [
        {
            "name": "Scene"
        }
    ],
    "sources": [
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {},
            "id": "image_source",
            "mixers": 0,
            "monitoring_type": 0,
            "muted": false,
            "name": "Image",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "file": "/Applications/NowYouHearMeConnect.app/Contents/Resources/NYHM-Listener.png"
            },
            "sync": 0,
            "volume": 1.0
        },
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {
                "OBSBasic.SelectScene": [],
                "libobs.hide_scene_item.Image": [],
                "libobs.hide_scene_item.NDI™ Source": [],
                "libobs.show_scene_item.Image": [],
                "libobs.show_scene_item.NDI™ Source": []
            },
            "id": "scene",
            "mixers": 0,
            "monitoring_type": 0,
            "muted": false,
            "name": "Scene",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "custom_size": false,
                "id_counter": 9,
                "items": [
                    {
                        "align": 5,
                        "bounds": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "bounds_align": 0,
                        "bounds_type": 0,
                        "crop_bottom": 0,
                        "crop_left": 0,
                        "crop_right": 0,
                        "crop_top": 0,
                        "group_item_backup": false,
                        "id": 8,
                        "locked": true,
                        "name": "NDI™ Source",
                        "pos": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "private_settings": {},
                        "rot": 0.0,
                        "scale": {
                            "x": 1.0,
                            "y": 1.0
                        },
                        "scale_filter": "disable",
                        "visible": true
                    },
                    {
                        "align": 5,
                        "bounds": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "bounds_align": 0,
                        "bounds_type": 0,
                        "crop_bottom": 0,
                        "crop_left": 0,
                        "crop_right": 0,
                        "crop_top": 0,
                        "group_item_backup": false,
                        "id": 9,
                        "locked": true,
                        "name": "Image",
                        "pos": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "private_settings": {},
                        "rot": 0.0,
                        "scale": {
                            "x": 1.7367707490921021,
                            "y": 1.7375271320343018
                        },
                        "scale_filter": "disable",
                        "visible": true
                    }
                ]
            },
            "sync": 0,
            "volume": 1.0
        },
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {
                "libobs.mute": [],
                "libobs.push-to-mute": [],
                "libobs.push-to-talk": [],
                "libobs.unmute": []
            },
            "id": "ndi_source",
            "mixers": 255,
            "monitoring_type": 1,
            "muted": false,
            "name": "NDI™ Source",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "ndi_bw_mode": 2,
                "ndi_fix_alpha_blending": false,' >/Applications/.nowyouhearme/Untitled.json
fullname=$(echo $name | sed 's/$/ (OBS)/')
quote='"'
ndi='"ndi_source_name": "'
fullline=$ndi$fullname$quote
echo $fullline >>/Applications/.nowyouhearme/Untitled.json
echo '},
            "sync": 0,
            "volume": 1.0
        }
    ],
    "transition_duration": 300,
    "transitions": []
}' >>/Applications/.nowyouhearme/Untitled.json
sleep 0.5
osascript <<EOT
do shell script "mv /Applications/.nowyouhearme/Untitled.json ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "rm -rf /Applications/.nowyouhearme/" with administrator privileges
do shell script "sudo rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt" with administrator privileges
delay 0.5
tell application "OBS" to activate
delay 3
display dialog "You as the Listener should now be able to hear the Host’s computer: \n\n$name" & "\n" & "\nHave the Host play audio through their DAW." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"NowYouHearMe!"}
delay 3  
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -pr '/Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global.ini' ~/'Library/Application Support/obs-studio/'" with administrator privileges
do shell script "sudo cp -pr '/Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/basic.ini' ~/'Library/Application Support/obs-studio/basic/profiles/Untitled/'" with administrator privileges
set TVPorC to display dialog "Finally, you as the Listener need to be able to see and control the Hosts screen. 

Is this session Personal or Commercial?

Personal: Musicians on Home Computers.
Click to open just TeamViewer.

Commercial: Studios OR Anyone Offering Private Lessons.

Click Commercial to buy TeamViewer or get a list of free trial screen share alternatives." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Commercial", "Personal"}
if button returned of TVPorC is "Personal" then
	tell application "TeamViewer" to activate
	delay 1
	do shell script "/Applications/TeamViewer.app/Contents/MacOS/TeamViewer >>/dev/null 2>&1"
	delay 1
	display dialog "The Host must allow TeamViewer to control their computer." & "
" & "
Once TeamViewer is an allowed app..." & "
" & "
The HOST must give the Listener the HOST’s TeamViewer ID and TeamViewer password over the phone." & "
" & "
The Listener will enter this information in the Control Remote Computer section." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Next"}
	delay 15
	display dialog "Once the Listener and Host are connected, you should now be able to hear and see the Host computer." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"YAYUHH!"}
	delay 3
	log " "
end if
if button returned of TVPorC is "Commercial" then
	set commercialoption to display dialog "Commercial use: 

In this session as the Listener, you would be remoting to the Host computer. Usually only one of you needs to buy a license.

You can either view the cost of a TeamViewer license or view a list of free trial screen share alternatives." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"View Alternatives", "TeamViewer"}
	if button returned of commercialoption is "TeamViewer" then
		open location "https://www.teamviewer.com/en-us/buy-now/"
		delay 5
	end if
	if button returned of commercialoption is "View Alternatives" then
		set alternativelist to display dialog "Here are 3 Free Trial remote control/screen share alternatives.

Mikogo: www.mikogo.com/download/

Zoom (40min Free Trial): www.zoom.us/support/download

ScreenLeap.com (40min Trial Screen Share only)" buttons {"Mikogo", "Zoom", "ScreenLeap"}
		if button returned of alternativelist is "Mikogo" then
			open location "https://mikogo.com/download/"
		end if
		if button returned of alternativelist is "Zoom" then
			open location "https://zoom.us/support/download"
		end if
		if button returned of alternativelist is "ScreenLeap" then
			open location "https://screenleap.com"
		end if
		delay 5
	end if
end if
delay 3
log " "
tell application "Terminal" to activate
delay 1
display dialog "You did it!" & "
" & "
Once you have connected to screenshare, you are all setup and ready to collaborate!" & "
" & "
" & "
DO NOT CLOSE THE TERMINAL WINDOW." & "
" & "
You may minimize this Terminal window." & "
BUT DO NOT CLOSE IT." & "
" & "
KEEP THE TERMINAL WINDOW OPEN." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
log " "
log " "
log "You may minimize this Terminal window. BUT DO NOT CLOSE IT."
log " "
log " "
delay 2
log "When you are done hosting this session and want to exit..."
log "TO PROPERLY disconnect and exit. Press SPACEBAR."
log " "
delay 4
tell application "Terminal" to activate
display dialog "Remember, when you are done hosting this session and want to exit, \nYOU MUST PROPERLY EXIT." & "\n" & "\nTO PROPERLY exit, make Terminal the focus window and press SPACEBAR." with icon file ("/Applications/Utilities/Terminal.app/Contents/Resources/Terminal.icns" as POSIX file) buttons {"For sure, my dude."}
EOT
osascript -e 'tell application "NowYouHearMeConnect" to quit'
echo "TO PROPERLY disconnect and exit. Press SPACEBAR."
echo " "
read -n1 -r -p "" key
if [ "$key" = '' ]; then
echo " "
echo " "
echo "Spacebar pressed. Once disconnected, this window will automatically close."
echo " "
echo "Disconnecting from your nowyouhear.me network. Please wait..."
osascript <<EOT
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
display dialog "You are now disconnected from your NowYouHear.me network. Terminal, OBS, and Teamviewer will close automatically." & "\n" & "\nSometimes, when OBS or TeamViewer close out, it will come up with an error that it quit unexpectedly. This error can be ignored." & "\n" & "\nThanks for using NowYouHear.me!" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
tell application "OBS" to quit
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio'" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio-archive-$filedate/global.ini' ]; then sudo mv ~/'Library/Application Support/obs-studio-archive-$filedate' ~/'Library/Application Support/obs-studio'; fi" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
EOT
fi
osascript -e 'tell application "TeamViewer" to quit'
fi
osascript -e 'tell application "Terminal" to quit' &
exit
