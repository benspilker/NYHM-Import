#!/bin/bash
echo "******************************************" 
echo " " 
echo "         Welcome to NowYouHear.me     "
echo " " 
echo "******************************************" 
echo " "
osver=$(defaults read loginwindow SystemVersionStampAsString | sed 's/10.//g' )
intosver=$(printf %.0f $(echo "$osver" | bc -l))
if [[ $intosver -lt 11 ]]; then 
osascript -e 'display dialog "You need Mac OS 10.11 El Capitan or Higher for this application to work, please upgrade your Mac OS." buttons {"Exit"}'
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if ! ping -q -c 2 -W 1 8.8.8.8 >/dev/null; then osascript -e 'display dialog "You are not connected to the Internet, or at least NowYouHearMe Connect could not ping Google. \n\nCheck your connection or reboot your computer." buttons {"OK"}' & osascript -e 'tell application "NowYouHearMeConnect" to quit' & osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ ! -f /Applications/.nowyouhearme/jq-osx-amd64 ]; then cp -pr ~/Downloads/.usr/local/bin/jq-osx-amd64 /Applications/.nowyouhearme/jq-osx-amd64; fi
chmod +x /Applications/.nowyouhearme/jq-osx-amd64
if [ -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then
oldztid=$(</Applications/.nowyouhearme/last-session-ztid.txt)
osascript <<EOT
display dialog "NowYouHearMe Connect was not PROPERLY exited the last time it ran." & "\n" & "\nBecause of this, your computer may still be connected to the NowYouHear.me network from the last session." & "\n" & "\nClick OK to clear out these settings." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
do shell script "sudo launchctl load /Applications/.nowyouhearme/zerotier/com.zerotier.one.plist" with administrator privileges
delay 1
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
display dialog "Your previous session settings have been cleared" & "\n" & "\nClick OK to start a new NowYouHear.me session." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
delay 1
EOT
fi
osascript <<EOT
display dialog "Call your friend on the phone and confirm that they are available to Host a session." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Yes, We’re Ready"}
EOT
echo " "
echo "Enter the nowyouhear.me account email and pin in the dialog prompts."
echo "This will also require your computer password."
echo " "
sleep 2
email=$(/usr/bin/osascript <<EOT
set email to the text returned of (display dialog "As a Listener you are considered a guest." & "\n\nYou do not need your own NowYouHear.me account." & "\n" & "\nHowever, the account holder could potentially swap roles and be a Listener." & "\n" & "\nYou must enter the email of the account holder." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
if [ -z "$email" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | /Applications/.nowyouhearme/jq-osx-amd64 '.[].config | select(.name == "'$email'")')
echo " "
echo "Looking up account info..."
echo " "
ztid=$(echo $ztid | /Applications/.nowyouhearme/jq-osx-amd64 .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then
email=$(/usr/bin/osascript <<EOT
set email to the text returned of (display dialog "The email entered was not found. Try again." & "\n" & "\nWhat is the NowYouHear.me account holder’s email?" default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
if [ -z "$email" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | /Applications/.nowyouhearme/jq-osx-amd64 '.[].config | select(.name == "'$email'")')
ztid=$(echo $ztid | /Applications/.nowyouhearme/jq-osx-amd64 .id | sed -e 's/^"//' -e 's/"$//')
fi
if [ -z "$ztid" ]; then
email=$(/usr/bin/osascript <<EOT
set email to the text returned of (display dialog "The email entered was not found. Try again." & "\n" & "\nWhat is the NowYouHear.me account holder’s email?" default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
if [ -z "$email" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | /Applications/.nowyouhearme/jq-osx-amd64 '.[].config | select(.name == "'$email'")')
ztid=$(echo $ztid | /Applications/.nowyouhearme/jq-osx-amd64 .id | sed -e 's/^"//' -e 's/"$//')
fi
if [ -z "$ztid" ]; then
osascript <<EOT
display dialog "Email account still not found. Have the account holder go to www.NowYouHear.me and confirm their subscription is still valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
sleep 2
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "What is their NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
passcodeconfig=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid | /Applications/.nowyouhearme/jq-osx-amd64 '.description' | sed -e 's/^"//' -e 's/"$//')
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is their NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is their NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is their NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is their NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
osascript <<EOT
display dialog "Passcode still not found. Have the account holder go to www.NowYouHear.me and confirm their subscription is valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
fi
passcheck1="2"
passcheck2="3"
if [ ! -z $passcodeconfig ]; then passcheck1="1"; fi
if [ $passcode == $passcodeconfig ]; then passcheck2="1"; fi
if [ $passcheck1 == $passcheck2 ]; then
echo " "
echo "Connecting to the account holder’s NowYouHear.me network..."
count=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid | /Applications/.nowyouhearme/jq-osx-amd64 '.totalMemberCount')
count1=$count
if (($count == 0 )); then count1=1; fi
filedate=$(date "+%m-%d-%y")
echo $ztid >/Applications/.nowyouhearme/last-session-ztid.txt
osascript <<EOT
tell application "OBS" to quit
do shell script "sudo launchctl load /Applications/.nowyouhearme/zerotier/com.zerotier.one.plist" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/connectfirstrun.txt 2>&1 >/dev/null" with administrator privileges
do shell script "if [ -f ~/Downloads/.usr/local/bin/jq-osx-amd64 ]; then sudo rm -rf ~/Downloads/.usr; fi" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio/global.ini' ]; then sudo cp -pr ~/'Library/Application Support/obs-studio' ~/'Library/Application Support/obs-studio-archive-$filedate'; fi" with administrator privileges
do shell script "sudo /usr/local/bin/zerotier-cli join $ztid" with administrator privileges
do shell script "sudo cp -pr /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/obs-studio ~/'Library/Application Support/'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -r /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global-mainoutput-false.ini  ~/'Library/Application Support/obs-studio/'" with administrator privileges
do shell script "sudo mv ~/'Library/Application Support/obs-studio/global-mainoutput-false.ini' ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
tell application "Terminal" to activate
EOT
sleep 2
echo "Looking for NowYouHear.me network address..."
sleep 1
echo " "
echo " "
sleep 2
echo "This may take up to a minute to detect..."
sleep 2
echo " "
sleep 3
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
if [ -z "$onnetwork" ]; then
sleep 2
echo " "
sleep 3
echo " "
echo "Looking for NowYouHear.me network address...2nd Try."
sleep 2
echo "Please be patient..."
sleep 3
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if [ -z "$onnetwork" ]; then
echo " "
sleep 3
echo "Looking for NowYouHear.me network address...3rd Try."
sleep 2
echo " "
sleep 2
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if ([ $count1 -gt 5 ] && [ -z "$onnetwork" ]); then
osascript <<EOT
display dialog "Well there's good news and bad news..." & "
" & "
The good news is that you or the account holder has been using NowYouHear.me on several devices, which is really rad. So good job!" & "
" & "
The bad news is that you have exceeded the 5 device limit on this account. 

To fix this, you must contact NowYouHear.me support to clear unused devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit and Go to Website"}
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
tell application "NowYouHearMeConnect" to quit
do shell script "if [ -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a 'Google Chrome.app'; fi"
do shell script "if [ ! -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a Safari.app; fi"
do shell script "sudo launchctl unload /Applications/.nowyouhearme/zerotier/com.zerotier.one.plist" with administrator privileges
delay 0.5
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
tell application "NowYouHearMeConnect" to quit
EOT
fi
if [ ! -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -z "$onnetwork" ]; then
osascript <<EOT
set detect to display dialog "This computer could not find a NowYouHear.me network address." & "\n" & "\nTo fix this NowYouHearMe Connect will close and reopen." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit This Program" , "Reopen"}
if button returned of detect is "Exit This Program" then
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload /Applications/.nowyouhearme/zerotier/com.zerotier.one.plist" with administrator privileges
delay 0.5
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
tell application "NowYouHearMeConnect" to quit
end if
if button returned of detect is "Reopen" then
delay 0.5
end if
EOT
if [ ! -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then
oldztid=$(</Applications/.nowyouhearme/last-session-ztid.txt)
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
delay 1
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-listener"
end tell
delay 0.5
EOT
fi
fi
if [ ! -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
sleep 1
if [ ! -z "$onnetwork" ]; then
osascript <<EOT
display dialog "You are now connected to the Host's NowYouHear.me network." & "\n" & "\nThe Host's NowYouHear.me account can have up to 5 devices." & "\n" & "\nHave the Host contact NowYouHear.me support if you need to remove unused devices." & "\n" & "\nThe Host's account has used $count1 out of 5 available devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"I Understand, Let's Continue"}
delay 1
log " "
log "Network address found."
log " "
log "******************************************************************************"
log " " 
log "You are connected to $email's NowYouHear.me network!"
log " " 
log "Keep this window open." 
log " " 
log "******************************************************************************"
log " "
log " "
log " "
log " "
log " "
log " "
log " "
log " "
log " "
display dialog "You must now wait until the Host is ready to Broadcast sound..." & "\n" & "\nYou will know the HOST is ready when THEY see a dialog box that says..." & "\n" & "\n(You are now Broadcasting sound, with a stop sign icon.)" with icon stop buttons {"Yes, we are both ready"}
delay 1
EOT
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch.txt ) & sleep 1 ; kill $!
ndisearch=$(</Applications/.nowyouhearme/ndisearch.txt)
name=$(echo $ndisearch | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch.txt
name2=yes
name3=yes
fi
if [ -z "$name" ]; then
osascript <<EOT
display dialog "No NowYouHear.me peers Broadcasting OBS were discovered." & "\n" & "\nConfirm that the Host is running OBS?" with icon file ("/Applications/OBS.app/Contents/Resources/OBS.icns" as POSIX file) buttons {"Retry, Discovery?"}
EOT
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch2.txt ) & sleep 1 ; kill $!
ndisearch2=$(</Applications/.nowyouhearme/ndisearch2.txt)
name2=$(echo $ndisearch2 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch2.txt
name=$name2
fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then osascript -e 'display dialog "Well, crap!! It happened again…

The Listener should autodetect the Host.
Since this did not happen the 2nd time around…

There are 2 potential problems.

1. Confirm that you and the Host are using the same email to sign in?

2. If you’ve confirmed 1, then the Host Computer may not actually be on their NowYouHear.me network (even though it says they are)

The Host will need to sign out and sign back in." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Wait for Host"}'; fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then osascript -e 'display dialog "Waiting for Host to reconnect...

CLICK CONNECT AGAIN ONLY AFTER THE HOST HAS SIGNED BACK IN AND IS READY TO BROADCAST." with icon stop buttons {"Connect Again"}'; fi
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ] && [ -z "$name2" ]; then
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch3.txt ) & sleep 1 ; kill $!
ndisearch3=$(</Applications/.nowyouhearme/ndisearch3.txt)
name3=$(echo $ndisearch3 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch3.txt
name=$name3
fi
if [ -z "$name3" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
osascript <<EOT
display dialog "No NowYouHear.me peers Broadcasting OBS were discovered." & "\n" & "\nConfirm that the Host is running OBS?" with icon file ("/Applications/OBS.app/Contents/Resources/OBS.icns" as POSIX file) buttons {"Retry, Discovery?"}
EOT
( dns-sd -B _ndi._tcp >/Applications/.nowyouhearme/ndisearch3.txt ) & sleep 1 ; kill $!
ndisearch4=$(</Applications/.nowyouhearme/ndisearch4.txt)
name4=$(echo $ndisearch4 | cut -b 168-210 | sed "s/tcp. //g" | sed "s/di.//g" | sed "s/i.//g" | sed "s/_//g" | grep -o '^\S*')
rm /Applications/.nowyouhearme/ndisearch4.txt
name=$name4
fi
if [ -z "$name4" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then osascript -e 'display dialog "Hmmm, today is just not your day.

Listener and Host Computers could not autodetect each other.

Try you and the Host rebooting both your computers?" buttons {"Well, crap...Exit"}'; fi
if [ -z "$name3" ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
if [ -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then
oldztid=$(</Applications/.nowyouhearme/last-session-ztid.txt)
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
do shell script "sudo rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt" with administrator privileges
EOT
fi
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [ -z "$name2" ] && [ ! -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt ]; then
osascript <<EOT
display dialog "Well crap. This can happen sometimes...

Still no NowYouHear.me peers Broadcasting OBS were discovered." & "
" & "
The Listener could not autodetect the Host. 

If this is the 1st time (You) the Listener signed into an account, it can take longer that 1st time.

It should work the 2nd time around.

ARE YOU AND THE HOST USING THE SAME EMAIL TO SIGN IN? You have to use the same email account." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Sign Out and Sign Back In"}
EOT
if [ -z "$name2" ]; then echo "Listener could not autodetect." >/Applications/NowYouHearMeConnect.app/Contents/Resources/failedlistener.txt; fi
if [ -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then
oldztid=$(</Applications/.nowyouhearme/last-session-ztid.txt)
osascript <<EOT
log " "
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
delay 1
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-listener"
end tell
delay 0.5
EOT
fi
if [ ! -f /Applications/.nowyouhearme/last-session-ztid.txt ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
fi
sleep 2
osascript <<EOT
tell application "Terminal" to activate
EOT
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo "******************************************************************************"
echo " " 
echo "You are connected to $email's NowYouHear.me network!"
echo " " 
echo "Keep this window open." 
echo " " 
echo "******************************************************************************"
echo " "
echo " "
echo " "
echo " "
echo " "
echo " "
echo "Your OBS preferences are setup to receive audio from computer:"
echo " "
echo "$name"
echo " "
echo " "
echo " "
echo " " 
echo "NowYouHearMe Connect."
echo " "
echo " "
echo " " 
echo "You are the Listener within this session." 
echo " "
echo " "
echo " "
echo '{
    "current_program_scene": "Scene",
    "current_scene": "Scene",
    "current_transition": "Fade",
    "groups": [],
    "modules": {
        "auto-scene-switcher": {
            "active": false,
            "interval": 300,
            "non_matching_scene": "",
            "switch_if_not_matching": false,
            "switches": []
        },
        "output-timer": {
            "autoStartRecordTimer": false,
            "autoStartStreamTimer": false,
            "recordTimerHours": 0,
            "recordTimerMinutes": 0,
            "recordTimerSeconds": 30,
            "streamTimerHours": 0,
            "streamTimerMinutes": 0,
            "streamTimerSeconds": 30
        },
        "scripts-tool": []
    },
    "name": "Untitled",
    "preview_locked": false,
    "quick_transitions": [
        {
            "duration": 300,
            "hotkeys": [],
            "id": 1,
            "name": "Cut"
        },
        {
            "duration": 300,
            "hotkeys": [],
            "id": 2,
            "name": "Fade"
        }
    ],
    "saved_projectors": [],
    "scaling_enabled": false,
    "scaling_level": 0,
    "scaling_off_x": 0.0,
    "scaling_off_y": 0.0,
    "scene_order": [
        {
            "name": "Scene"
        }
    ],
    "sources": [
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {},
            "id": "image_source",
            "mixers": 0,
            "monitoring_type": 0,
            "muted": false,
            "name": "Image",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "file": "/Applications/NowYouHearMeConnect.app/Contents/Resources/NYHM-Listener.png"
            },
            "sync": 0,
            "volume": 1.0
        },
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {
                "OBSBasic.SelectScene": [],
                "libobs.hide_scene_item.Image": [],
                "libobs.hide_scene_item.NDI™ Source": [],
                "libobs.show_scene_item.Image": [],
                "libobs.show_scene_item.NDI™ Source": []
            },
            "id": "scene",
            "mixers": 0,
            "monitoring_type": 0,
            "muted": false,
            "name": "Scene",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "custom_size": false,
                "id_counter": 9,
                "items": [
                    {
                        "align": 5,
                        "bounds": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "bounds_align": 0,
                        "bounds_type": 0,
                        "crop_bottom": 0,
                        "crop_left": 0,
                        "crop_right": 0,
                        "crop_top": 0,
                        "group_item_backup": false,
                        "id": 8,
                        "locked": true,
                        "name": "NDI™ Source",
                        "pos": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "private_settings": {},
                        "rot": 0.0,
                        "scale": {
                            "x": 1.0,
                            "y": 1.0
                        },
                        "scale_filter": "disable",
                        "visible": true
                    },
                    {
                        "align": 5,
                        "bounds": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "bounds_align": 0,
                        "bounds_type": 0,
                        "crop_bottom": 0,
                        "crop_left": 0,
                        "crop_right": 0,
                        "crop_top": 0,
                        "group_item_backup": false,
                        "id": 9,
                        "locked": true,
                        "name": "Image",
                        "pos": {
                            "x": 0.0,
                            "y": 0.0
                        },
                        "private_settings": {},
                        "rot": 0.0,
                        "scale": {
                            "x": 1.7367707490921021,
                            "y": 1.7375271320343018
                        },
                        "scale_filter": "disable",
                        "visible": true
                    }
                ]
            },
            "sync": 0,
            "volume": 1.0
        },
        {
            "deinterlace_field_order": 0,
            "deinterlace_mode": 0,
            "enabled": true,
            "flags": 0,
            "hotkeys": {
                "libobs.mute": [],
                "libobs.push-to-mute": [],
                "libobs.push-to-talk": [],
                "libobs.unmute": []
            },
            "id": "ndi_source",
            "mixers": 255,
            "monitoring_type": 1,
            "muted": false,
            "name": "NDI™ Source",
            "private_settings": {},
            "push-to-mute": false,
            "push-to-mute-delay": 0,
            "push-to-talk": false,
            "push-to-talk-delay": 0,
            "settings": {
                "ndi_bw_mode": 2,
                "ndi_fix_alpha_blending": false,' >/Applications/.nowyouhearme/Untitled.json

fullname=$(echo $name | sed 's/$/ (OBS)/')
quote='"'
ndi='"ndi_source_name": "'
fullline=$ndi$fullname$quote

echo $fullline >>/Applications/.nowyouhearme/Untitled.json
echo '},
            "sync": 0,
            "volume": 1.0
        }
    ],
    "transition_duration": 300,
    "transitions": []
}' >>/Applications/.nowyouhearme/Untitled.json
sleep 0.5
osascript <<EOT
do shell script "mv /Applications/.nowyouhearme/Untitled.json ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/failedlistener.txt" with administrator privileges
delay 0.5
tell application "OBS" to activate
delay 3
display dialog "You as the Listener should now be able to hear the Host’s computer: \n\n$name" & "\n" & "\nHave the Host play audio through their DAW." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"NowYouHearMe!"}
delay 3  
display dialog "Finally, you as the Listener need to be able to see and control the Hosts screen. Click Next to open TeamViewer." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Next"}
delay 1
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -pr '/Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global.ini' ~/'Library/Application Support/obs-studio/'" with administrator privileges
EOT
osascript -e 'tell application "TeamViewer" to activate' >>/dev/null 2>&1
sleep 1
/Applications/TeamViewer.app/Contents/MacOS/TeamViewer >>/dev/null 2>&1
sleep 1
osascript <<EOT
display dialog "The Host must allow TeamViewer to control their computer." & "
" & "
Once TeamViewer is an allowed app..." & "\n" & "\nThe HOST must give the Listener the HOST’s TeamViewer ID and TeamViewer password over the phone." & "\n" & "\nThe Listener will enter this information in the Control Remote Computer section." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Next"}
delay 15
display dialog "Once the Listener and Host are connected, you should now be able to hear and see the Host computer." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"YAYUHH!"}
delay 3
log " "
tell application "Terminal" to activate
delay 1
display dialog "You did it!" & "
" & "
You are all setup and ready to collaborate!" & "
" & "
" & "
DO NOT CLOSE THE TERMINAL WINDOW." & "
" & "
You may minimize this Terminal window." & "
BUT DO NOT CLOSE IT." & "
" & "
KEEP THE TERMINAL WINDOW OPEN." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
log " "
log " "
log "You may minimize this Terminal window. BUT DO NOT CLOSE IT."
log " "
log " "
delay 2
log "When you are done hosting this session and want to exit..."
log "TO PROPERLY disconnect and exit. Press SPACEBAR."
log " "
delay 5
display dialog "Remember, when you are done hosting this session and want to exit, \nYOU MUST PROPERLY EXIT." & "\n" & "\nTO PROPERLY exit, make Terminal the focus window and press SPACEBAR." with icon file ("/Applications/Utilities/Terminal.app/Contents/Resources/Terminal.icns" as POSIX file) buttons {"For sure, my dude."}
EOT
echo "TO PROPERLY disconnect and exit. Press SPACEBAR."
echo " "
read -n1 -r -p "" key
if [ "$key" = '' ]; then
echo " "
echo " "
echo "Spacebar pressed. Once disconnected, this window will automatically close."
echo " "
echo "Disconnecting from your nowyouhear.me network. Please wait..."
osascript <<EOT
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload /Applications/.nowyouhearme/zerotier/com.zerotier.one.plist" with administrator privileges
delay 0.5
display dialog "You are now disconnected from your NowYouHear.me network. Terminal, OBS, and Teamviewer will close automatically." & "\n" & "\nSometimes, when OBS or TeamViewer close out, it will come up with an error that it quit unexpectedly. This error can be ignored." & "\n" & "\nThanks for using NowYouHear.me!" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
tell application "OBS" to quit
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio'" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio-archive-$filedate/global.ini' ]; then sudo mv ~/'Library/Application Support/obs-studio-archive-$filedate' ~/'Library/Application Support/obs-studio'; fi" with administrator privileges
do shell script "sudo rm -rf /Applications/.nowyouhearme/last-session-ztid.txt" with administrator privileges
EOT
fi
osascript -e 'tell application "TeamViewer" to quit'
osascript -e 'tell application "NowYouHearMeConnect" to quit'
fi
osascript -e 'tell application "Terminal" to quit' &
exit