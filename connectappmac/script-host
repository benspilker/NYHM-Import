#!/bin/bash
clear
echo "******************************************" 
echo " " 
echo "         Welcome to NowYouHear.me     "
echo " " 
echo "******************************************" 
echo " "
osver=$(defaults read loginwindow SystemVersionStampAsString | sed 's/10.//g' )
intosver=$(printf %.0f $(echo "$osver" | bc -l))
hostname=$(hostname)
if [[ $intosver -lt 11 ]]; then 
osascript -e 'display dialog "You need Mac OS 10.11 El Capitan or Higher for this application to work, please upgrade your Mac OS." buttons {"Exit"}'
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if ! ping -q -c 2 -W 1 8.8.8.8 >/dev/null; then osascript -e 'display dialog "You are not connected to the Internet, or at least NowYouHearMe Connect could not ping Google. \n\nCheck your connection or reboot your computer." buttons {"OK"}' & osascript -e 'tell application "NowYouHearMeConnect" to quit' & osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -f ~/Downloads/.usr/local/bin/jq-osx-amd64 ]; then cp -pr ~/Downloads/.usr/local/bin/jq-osx-amd64 '/Library/Application Support/nowyouhearme/jq-osx-amd64'; fi
if [ -f /Applications/.nowyouhearme/jq-osx-amd64 ]; then
osascript <<EOT
display dialog "NowYouHearMe Connect needs to fix itself and move supporting files from ( /Applications/.nowyouhearme ) to 
/Library/Application Support/nowyouhearme" & "
" & "
This way files are stored in a more correct location." & "
Your password will be required for this move." buttons {"OK"}
do shell script "sudo mv /Applications/.nowyouhearme/ '/Library/Application Support/'" with administrator privileges
do shell script "sudo mv '/Library/Application Support/.nowyouhearme/' '/Library/Application Support/nowyouhearme/'" with administrator privileges
EOT
fi
chmod +x '/Library/Application Support/nowyouhearme/jq-osx-amd64'
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
display dialog "NowYouHearMe Connect was not PROPERLY exited the last time it ran." & "\n" & "\nBecause of this, your computer may still be connected to the NowYouHear.me network from the last session." & "\n" & "\nClick OK to clear out these settings." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
do shell script "sudo launchctl load '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 1
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
display dialog "Your previous session settings have been cleared" & "\n" & "\nClick OK to start a new NowYouHear.me session." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
delay 1
EOT
fi
echo "Enter your nowyouhear.me account email or username,"
echo "then pin in the dialog prompts."
echo " "
echo "Next you'll be joined to your NowYouHear.me network."
echo "This will require your computer password."
echo " "
sleep 2
emailoruser=$(/usr/bin/osascript <<EOT
set emailresp to display dialog "What is your NowYouHear.me account email or username?\n\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK" , "No Account? Create One Here"}
if button returned of emailresp is "No Account? Create One Here" then 
	open location "https://nowyouhear.me/membership-account/membership-levels/"
end if
if button returned of emailresp is "OK" then
	delay 0.5
	set emailoruser to the text returned of emailresp
end if
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
if [ -z "$emailoruser" ]; then
sleep 3
osascript <<EOT
display dialog "NowYouHearMe Connect will now exit so that you can create your account" & "\n" & "\nNote, ONLY THE HOST NEEDS TO CREATE AN ACCOUNT." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
echo " "
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then
if [ -n "$emailoruser" ]; then
userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser")
user=$(echo $userstring | sed 's/[:].*$//')
fi
fi
echo " "
echo "Looking up account info..."
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
emailoruser=$(/usr/bin/osascript <<EOT
set emailoruser to the text returned of (display dialog "The email or username entered was not found. Try again." & "\n" & "\nWhat is your NowYouHear.me account?\n\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser"); fi
fi
fi
if [ -z "$emailoruser" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
emailoruser=$(/usr/bin/osascript <<EOT
set emailoruser to the text returned of (display dialog "The email or username entered was not found. Try again." & "\n" & "\nWhat is your NowYouHear.me account?\n\nLISTENER AND HOST MUST SIGN IN WITH THE SAME ACCOUNT." default answer "" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
emailoruser=$(echo $emailoruser | sed 's/ //g')
ztid=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].config | select(.name == "'$emailoruser'")')
ztid=$(echo $ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' .id | sed -e 's/^"//' -e 's/"$//')
if [ -z "$ztid" ]; then 
userstring=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.[].rulesSource' | sed "s/drop not ethertype ipv4 and not ethertype arp; drop sport 1-4999; drop dport 1-4999; drop sport 5009-5352; drop dport 5009-5352; drop sport 5354-5960; drop dport 5354-5960; drop sport 5962-5999; drop dport 5962-5999; drop sport 6006-6959; drop dport 6006-6959; drop sport 6961-20807; drop dport 6961-20807; drop sport 20809-49151; drop dport 20809-49151; accept;//g" | sed -e 's/^"//' -e 's/"$//' | sed "s/#//g" | sed "s/;//g" | grep "$emailoruser"); 
user=$(echo $userstring | sed 's/[:].*$//')
fi
fi
fi
if [ -z "$emailoruser" ]; then
sleep 1
osascript <<EOT
display dialog "Well, that’s dumb? Why would you not enter anything? NowYouHearMe Connect will now exit." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"My Bad"}
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
if [[ $emailoruser != $user ]]; then
if [ -z "$ztid" ]; then
osascript <<EOT
display dialog "Account still not found." & "\n" & "\nClicking OK will exit and take you to www.NowYouHear.me." & "\n" & "\nLog in to the website to confirm your subscription is still valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
sleep 1
if [ -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a 'Google Chrome.app'; fi
if [ ! -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a Safari.app; fi
sleep 2
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
fi
fi
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "What is your NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
if [ -z "$userstring" ]; then
passcodeconfig=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.description' | sed -e 's/^"//' -e 's/"$//')
fi
if [ -n "$userstring" ]; then 
passcodeconfig=$(echo $userstring | sed "s/$emailoruser://g" | sed 's/[:].*$//')
fi
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is your NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is your NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [[ $passcode == " " ]]; then
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is your NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
passcode=$(/usr/bin/osascript <<EOT
set passcode to the text returned of (display dialog "Passcode not found. Try again. What is your NowYouHear.me 4 digit passcode?" default answer "" with hidden answer with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"})
EOT)
fi
if [ $passcode != $passcodeconfig ]; then 
osascript <<EOT
display dialog "Passcode still not found. Go to www.NowYouHear.me and confirm your subscription is valid and active." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
EOT
fi
passcheck1="2"
passcheck2="3"
if [ ! -z $passcodeconfig ]; then passcheck1="1"; fi
if [ $passcode == $passcodeconfig ]; then passcheck2="1"; fi
if [ $passcheck1 == $passcheck2 ]; then
if [ -n "$userstring" ]; then
ztid=$(echo $userstring | sed "s/$emailoruser://g" | sed 's/.*://')
fi
echo " "
echo "Connecting to your NowYouHear.me network..."
nyhmnetwork=$(curl -sH 'Accept: application/json' -H 'Authorization: Bearer HnHCtFFh6RPE9av7ZMETfUmaKAXpHJBq' https://my.zerotier.com/api/network/$ztid)
devicelimit1more=$(echo $nyhmnetwork | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.config.ipAssignmentPools' | tr -d '[ { "ipRangeStart": "172.22.172.1", "ipRangeEnd": "172.22.172.',},])
devicelimit=$(($devicelimit1more - 1))
count=$(echo $nyhmnetwork | '/Library/Application Support/nowyouhearme/jq-osx-amd64' '.totalMemberCount')
count1=$count
if (($count == 0 )); then count1=1; fi
filedate=$(date "+%m-%d-%y")
osascript <<EOT
tell application "OBS" to quit
do shell script "echo $ztid >'/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
do shell script "sudo launchctl load '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/connectfirstrun.txt' 2>&1 >/dev/null" with administrator privileges
do shell script "if [ -f ~/Downloads/.usr/local/bin/jq-osx-amd64 ]; then sudo rm -rf ~/Downloads/.usr/; fi" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio/global.ini' ]; then sudo cp -pr ~/'Library/Application Support/obs-studio' ~/'Library/Application Support/obs-studio-archive-$filedate'; fi" with administrator privileges
do shell script "sudo /usr/local/bin/zerotier-cli join $ztid" with administrator privileges
do shell script "sudo cp -pr /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/obs-studio ~/'Library/Application Support/'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -r /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/Untitled-host-with-sf-as-aux1.json ~/'Library/Application Support/obs-studio/basic/scenes/'" with administrator privileges
do shell script "sudo mv ~/'Library/Application Support/obs-studio/basic/scenes/Untitled-host-with-sf-as-aux1.json' ~/'Library/Application Support/obs-studio/basic/scenes/Untitled.json'" with administrator privileges
do shell script "sudo cp -r /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global-mainoutput-true.ini  ~/'Library/Application Support/obs-studio/'" with administrator privileges
do shell script "sudo mv ~/'Library/Application Support/obs-studio/global-mainoutput-true.ini' ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -pr '/Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/basic.ini' ~/'Library/Application Support/obs-studio/basic/profiles/Untitled/'" with administrator privileges
tell application "Terminal" to activate
delay 2
EOT
clear
echo "******************************************" 
echo " " 
echo "         Welcome to NowYouHear.me     "
echo " " 
echo "******************************************" 
echo " "
echo "Looking for NowYouHear.me network address..."
echo " "
sleep 1
echo " "
sleep 2
echo "This may take up to a minute to detect..."
sleep 2
echo " "
sleep 2
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
if [ -z "$onnetwork" ]; then
sleep 2
echo " "
sleep 2
echo " "
echo "Looking for NowYouHear.me network address...2nd Try."
sleep 2
echo "Please be patient..."
sleep 2
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if [ -z "$onnetwork" ]; then
echo " "
sleep 2
echo "Looking for NowYouHear.me network address...3rd Try."
sleep 2
echo " "
sleep 2
onnetwork=$(ifconfig | grep -oh "172.22.172.255" )
fi
if ([ $count1 -gt $devicelimit ] && [ -z "$onnetwork" ]); then
osascript <<EOT
display dialog "Well there's good news and bad news..." & "
" & "
The good news is that you've been using NowYouHear.me on several devices, which is really rad. So good job!" & "
" & "
The bad news is that you have exceeded the $devicelimit device limit on this account. 
To fix this, you must contact NowYouHear.me support to clear unused devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit and Go to Website"}
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
do shell script "if [ -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a 'Google Chrome.app'; fi"
do shell script "if [ ! -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me -a Safari.app; fi"
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
EOT
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -z "$onnetwork" ]; then
osascript <<EOT
set detect to display dialog "This computer could not find a NowYouHear.me network address." & "\n" & "\nTo fix this, NowYouHearMe Connect will close and reopen." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Exit This Program" , "Reopen"}
if button returned of detect is "Exit This Program" then
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "NowYouHearMeConnect" to quit
end if
if button returned of detect is "Reopen" then
delay 0.5
end if
EOT
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to quit' & exit; fi
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
delay 1
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-host"
end tell
delay 0.5
EOT
fi
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
sleep 1
echo " "
echo "Woohoo! Network address found!"
echo " "
osascript <<EOT
display dialog "Call your NowYouHear.me friend on the phone and confirm that they are ready to Listen to your session.\n\nYes Macs can talk to PCs and vice-versa." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Yes, we are ready"}
delay 1
display dialog "You are now connected to your NowYouHear.me network." & "\n" & "\nYou can add up to $devicelimit devices to your own NowYouHear.me account." & "\n" & "\nContact NowYouHear.me support if you need to remove unused devices." & "\n" & "\nYour account has previously used $count1 out of $devicelimit available devices." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"I Understand, Let’s Continue"}
delay 1
display dialog "Now you, as the Host, need to setup your computer audio to route out sound." & "
" & "
First, open your DAW (Garageband, or Logic, or Ableton, etc.)" buttons {"Next"}
delay 2
set sfroute to display dialog "Next, you’ll need to route audio from your DAW to a virtual audio channel called Soundflower (2ch)." & "
" & "
Open your DAWs preferences, click the Audio tab, and set your DAWs audio OUTPUT to Soundflower (2ch)." & "
" & "
This will temporarily mute your DAW until the next few steps." with icon caution buttons {"How do I do that?", "Next"}
if button returned of sfroute is "How do I do that?" then
	do shell script "if [ -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me/how-to-soundflower/ -a 'Google Chrome.app'; fi"
	do shell script "if [ ! -f '/Applications/Google Chrome.app/Contents/Info.plist' ]; then open https://nowyouhear.me/how-to-soundflower/ -a Safari.app; fi"
	delay 25
end if
if button returned of sfroute is "Next" then
	delay 4
end if
set obsopen to display dialog "Click to automatically open OBS." & "
" & "
OBS MUST STAY OPEN FOR SOUND TO PLAY." with icon file ("/Applications/OBS.app/Contents/Resources/OBS.icns" as POSIX file) buttons {"Wait up, I'm Still Routing Soundflower" , "Next"}
if button returned of obsopen is "Wait up, I'm Still Routing Soundflower" then
delay 4
display dialog "Remember, you’ll need to route audio from your DAW to a virtual audio channel called Soundflower (2ch)." & "
" & "
Open your DAWs preferences, click the Audio tab, and set your DAWs audio OUTPUT to Soundflower (2ch)." & "
" & "
This will temporarily mute your DAW until the next few steps." & "
" & "
Clicking Next will automatically open OBS, since that is the next step." with icon caution buttons {"Next"}
	delay 2
end if
if button returned of obsopen is "Next" then
	delay 0.5
end if
tell application "OBS" to activate
delay 1
display dialog "Go over to your DAW and play some audio. If you hear sound, then you are almost ready for the Listener to hear you." buttons {"Next"}
delay 4
set obssound to display dialog "You can drag this dialog box wherever you want." & "
" & "
With OBS open and your DAW playing something THROUGH SOUNDFLOWER (2CH) OUTPUT, do you now hear sound?" buttons {"No, help me Troubleshoot?", "Yes"}
if button returned of obssound is "Yes" then
	delay 0.5
end if
if button returned of obssound is "No, help me Troubleshoot?" then
	display dialog "Click Next to automatically open System Preferences." with icon file ("/Applications/System Preferences.app/Contents/Resources/PrefApp.icns" as POSIX file) buttons {"Next"}
	tell application "System Preferences" to activate
	delay 2
	display dialog "Inside of System Preferences, click the Sound tab. (second row, far right.)" with icon file ("/Applications/System Preferences.app/Contents/Resources/PrefApp.icns" as POSIX file) buttons {"Next"}
	delay 2
	display dialog "Inside of the Sound tab, Confirm your OUTPUT is either your internal speakers or your audio interface." & "
" & "
Make sure your system audio OUTPUT is NOT SOUNDFLOWER." with icon file ("/Applications/System Preferences.app/Contents/Resources/PrefApp.icns" as POSIX file) buttons {"Next"}
	set obssound2 to display dialog "You can drag this dialog box wherever you want." & "
" & "
Try playing something through your DAW again." & "
" & "
Do you hear sound now?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No", "Yes"}
	if button returned of obssound2 is "Yes" then
		tell application "System Preferences" to quit
		delay 0.5
	end if
	if button returned of obssound2 is "No" then
		tell application "System Preferences" to quit
		delay 0.5
		display dialog "OBS may be giving you trouble." & "
" & "
However, the NowYouHearMe Connect App may be able to automatically fix a common OBS bug." & "
" & "
Click OK to automatically close OBS so NowYouHearMe Connect can attempt to resolve the problem." & "
" & "
This will also require your computer password." buttons {"OK"}
		tell application "OBS" to quit
		delay 0.5
		do shell script "sudo rm -rf ~/‘Library/Application Support/obs-studio/basic/scenes/Untitled.json’" with administrator privileges
		do shell script "sudo cp -pr /Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/Untitled-host-with-sf-as-aux2.json ~/‘Library/Application Support/obs-studio/basic/scenes/‘" with administrator privileges
		do shell script "sudo mv ~/‘Library/Application Support/obs-studio/basic/scenes/‘ Untitled-host-with-sf-as-aux2.json ~/‘Library/Application Support/obs-studio/basic/scenes/Untitled.json’" with administrator privileges
		set obssound3 to display dialog "You can drag this dialog box wherever you want." & "
" & "
Try playing something through your DAW again." & "
" & "
Do you hear sound now?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No", "Yes"}
		if button returned of obssound3 is "Yes" then
			delay 0.5
		end if
		if button returned of obssound3 is "No" then
			display dialog "OBS may still be giving you trouble." & "
" & "
Click OK to follow the OBS troubleshooting PDF guide." buttons {"OK"}
			do shell script "open -a Safari.app /Applications/NowYouHearMeConnect.app/Contents/Resources/troubleshooting-obsmac.pdf"
			delay 10
			display dialog "You can drag this dialog box wherever you want." & "
" & "
Once you have followed the .pdf instructions, try playing something through your DAW again." & "
" & "
Click OK when you hear sound." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
		end if
	end if
end if
display dialog "Now that you hear your DAW’s audio, tell the Listener over the phone that:" & "
" & "
You (The HOST) are now Broadcasting sound." with icon stop buttons {"I Told The Listener I’m Ready"}
tell application "Terminal" to activate
log " "
log " "
log " "
log " "
log " "
log " "
log "******************************************************************************"
log " " 
log "You are connected to $emailoruser's NowYouHear.me network!"
log " " 
log "Keep this window open." 
log " " 
log "******************************************************************************"
log " "
log " "
log "Your computer's name is $hostname."
log " "
log " "
log " "
log " "
log "Your OBS preferences are setup to send audio from your computer."
log " "
log " "
log "NowYouHearMe Connect."
log " "
log " "
log " " 
log "You are the Host within this session." 
log " "
delay 3
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
do shell script "sudo cp -pr '/Applications/NowYouHearMeConnect.app/Contents/Resources/OBSconfigs/global-default-ndi-out.ini' ~/'Library/Application Support/obs-studio/'" with administrator privileges
do shell script "sudo mv ~/'Library/Application Support/obs-studio/global-default-ndi-out.ini' ~/'Library/Application Support/obs-studio/global.ini'" with administrator privileges
EOT
if [ ! -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt ]; then
osascript <<EOT
set listenconnect to display dialog "Was the Listener computer able to connect to hear your computer audio?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No, Retry?" , "Yes"}
if button returned of listenconnect is "Yes" then
delay 0.5
end if
if button returned of listenconnect is "No, Retry?" then 
delay 2
set nestedlistenconnect to display dialog "Was the Listener computer able to connect to hear your computer audio?" & "\n" & "\nIf not, the Listener will have to Sign Out and Sign Back In." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No, Wait for Listener" , "Yes"}
if button returned of nestedlistenconnect is "Yes" then
delay 0.5
end if
if button returned of nestedlistenconnect is "No, Wait for Listener" then 
delay 2
display dialog "Waiting for Listener to Reconnect" & "\n" & "\nClick Try Again only AFTER the Listener has signed back in and is ready to discover your computer." with icon stop buttons {"Try Again"}
delay 2
set listenconnect to display dialog "How about now? \n\nWas the Listener computer able to connect to hear your computer audio?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No, Retry?" , "Yes"}
if button returned of listenconnect is "Yes" then
delay 0.5
end if
if button returned of listenconnect is "No, Retry?" then 
delay 2
set listenconnect2 to display dialog "Was the Listener computer able to connect to hear your computer audio?" & "\n" & "\nIf not, you (the Host) will have to Sign Out and Sign Back In." & "\n" & "\nMAKE SURE YOU AND THE LISTENER ARE USING THE SAME ACCOUNT." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No, Sign Out and Sign Back In" , "Yes"}
if button returned of listenconnect2 is "Yes" then
delay 0.5
end if
if button returned of listenconnect2 is "No, Sign Out and Sign Back In" then 
log "Exiting NowYouHearMe Connect..."
log " "
delay 2
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
do shell script "echo 'Host is signing out and back in.' >/Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt" with administrator privileges
delay 1
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 1
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
tell application "OBS" to quit
tell application "Terminal"
	activate
	do script "/Applications/NowYouHearMeConnect.app/Contents/Resources/script-host"
end tell
delay 0.5
end if
end if
end if
end if
EOT
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
sleep 1
if [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt ]; then
osascript <<EOT
set listenconnect to display dialog "Was the Listener computer able to connect to hear your computer audio?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No, Retry?" , "Yes"}
if button returned of listenconnect is "Yes" then
log " "
log "NowYouHearMe Connect needs to clear out the failed host log file, now that you successfully connected."
do shell script "rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt" with administator privileges
end if
if button returned of listenconnect is "No, Retry?" then 
delay 2
set listenconnect2 to display dialog "Was the Listener computer able to connect to hear your computer audio?" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"No" , "Yes"}
if button returned of listenconnect2 is "Yes" then
log " "
log "NowYouHearMe Connect needs to clear out the failed host log file, now that you successfully connected."
do shell script "rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt" with administator privileges
end if
if button returned of listenconnect2 is "No" then
tell application "OBS" to quit
delay 1
display dialog "Hmmm, today is just not your day.
Listener and Host Computers could not autodetect each other.
Try you and the Listener rebooting both your computers?
Try again later, but for now you may want to change your DAW's audio output preferences back to your internal speakers or audio interface (setting it back to normal)." buttons {"Well, crap...Exit"}
end if 
end if
EOT
if [ -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ] && [ -f /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt ]; then
oldztid=$(<'/Library/Application Support/nowyouhearme/last-session-ztid.txt')
osascript <<EOT
log "Exiting NowYouHearMe Connect..."
log " "
do shell script "sudo /usr/local/bin/zerotier-cli leave $oldztid >>/dev/null 2>&1" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
do shell script "rm -rf /Applications/NowYouHearMeConnect.app/Contents/Resources/failedhost.txt"
EOT
sleep 1
osascript -e 'tell application "NowYouHearMeConnect" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit
sleep 1
fi
fi
if [ ! -f '/Library/Application Support/nowyouhearme/last-session-ztid.txt' ]; then osascript -e 'tell application "Terminal" to close second window' & exit; fi
osascript <<EOT
set TVPorC to display dialog "Finally, the Listener needs to be able to see and control the Host (Your) screen.

Is this session Personal or Commercial?

Personal: Musicians on Home Computers.
Click to open just TeamViewer.

Commercial: Studios OR Anyone Offering Private Lessons.

Click Commercial to buy TeamViewer or get a list of free trial screen share alternatives." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Commercial", "Personal"}
if button returned of TVPorC is "Personal" then
	tell application "TeamViewer" to activate
	delay 1
	do shell script "/Applications/TeamViewer.app/Contents/MacOS/TeamViewer >>/dev/null 2>&1"
	delay 1
	display dialog "The Host must allow Teamviewer to control this computer." & "
" & "
Once TeamViewer is an allowed app, give the Listener your TeamViewer ID and TeamViewer password over the phone." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"Next"}
	delay 15
	display dialog "Once the Listener and Host are connected, you should now be able to hear and see the Host computer." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"NowYouHearMe!"}
	delay 3
	log " "
end if
if button returned of TVPorC is "Commercial" then
	set commercialoption to display dialog "Commercial use: 

In this current session with you as the Host, the Listener would be remoting to your computer. Only one of you needs to buy a license.

You can either view the cost of a TeamViewer license or view a list of free trial screen share alternatives." with icon file ("/Applications/TeamViewer.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"View Alternatives", "TeamViewer"}
	if button returned of commercialoption is "TeamViewer" then
		open location "https://www.teamviewer.com/en-us/buy-now/"
		delay 5
	end if
	if button returned of commercialoption is "View Alternatives" then
		set alternativelist to display dialog "Here are 3 Free Trial remote control/screen share alternatives.

Mikogo: www.mikogo.com/download/

Zoom (40min Free Trial): www.zoom.us/support/download

ScreenLeap.com (40min Trial Screen Share only)" buttons {"Mikogo", "Zoom", "ScreenLeap"}
		if button returned of alternativelist is "Mikogo" then
			open location "https://mikogo.com/download/"
		end if
		if button returned of alternativelist is "Zoom" then
			open location "https://zoom.us/support/download"
		end if
		if button returned of alternativelist is "ScreenLeap" then
			open location "https://screenleap.com"
		end if
		delay 5
	end if
end if
tell application "Terminal" to activate
delay 1
display dialog "You did it!" & "
" & "
Once you have connected to screenshare, you are all setup and ready to collaborate!" & "
" & "
" & "
DO NOT CLOSE THE TERMINAL WINDOW." & "
" & "
You may minimize this Terminal window." & "
BUT DO NOT CLOSE lT." & "
" & "
KEEP THE TERMINAL WINDOW OPEN." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
log " "
log " "
log "You may minimize this Terminal window. BUT DO NOT CLOSE IT."
log " "
log " "
delay 2
log "When you are done hosting this session and want to exit..."
log "TO PROPERLY disconnect and exit. Press SPACEBAR."
log " "
delay 4
tell application "Terminal" to activate
display dialog "Remember, when you are done hosting this session and want to exit, \nYOU MUST PROPERLY EXIT." & "\n" & "\nTO PROPERLY exit, make Terminal the focus window and press SPACEBAR." with icon file ("/Applications/Utilities/Terminal.app/Contents/Resources/Terminal.icns" as POSIX file) buttons {"For sure, my dude."}
EOT
osascript -e 'tell application "NowYouHearMeConnect" to quit'
echo " "
echo "This will also require your password to disconnect."
echo " "
read -n1 -r -p "TO PROPERLY disconnect and exit. Press SPACEBAR." key
if [ "$key" = '' ]; then
echo " "
echo " "
echo " "
echo "Spacebar pressed. Once disconnected, this window will automatically close."
echo "Disconnecting from your nowyouhear.me network. Please wait..."
osascript <<EOT
do shell script "sudo /usr/local/bin/zerotier-cli leave $ztid" with administrator privileges
delay 1
do shell script "sudo launchctl unload '/Library/Application Support/nowyouhearme/zerotier/com.zerotier.one.plist'" with administrator privileges
delay 0.5
display dialog "You are now disconnected from your NowYouHear.me network. Terminal, OBS, and Teamviewer will close automatically." with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"OK"}
tell application "OBS" to quit
display dialog "You may also want to change your DAW's audio output preferences back to your internal speakers or audio interface (setting it back to normal)." & "
" & "
Also sometimes, when OBS or TeamViewer close out, it will come up with an error that it quit unexpectedly. This error can be ignored." & "
" & "
Thanks for using NowYouHear.me!" with icon file ("/Applications/NowYouHearMeConnect.app/Contents/Resources/AppIcon.icns" as POSIX file) buttons {"WOOHOO"}
do shell script "sudo rm -rf ~/'Library/Application Support/obs-studio'" with administrator privileges
do shell script "if [ -f ~/'Library/Application Support/obs-studio-archive-$filedate/global.ini' ]; then sudo mv ~/'Library/Application Support/obs-studio-archive-$filedate' ~/'Library/Application Support/obs-studio'; fi" with administrator privileges
do shell script "sudo rm -rf '/Library/Application Support/nowyouhearme/last-session-ztid.txt'" with administrator privileges
EOT
fi
fi
osascript -e 'tell application "TeamViewer" to quit'
osascript -e 'tell application "Terminal" to quit' &
exit